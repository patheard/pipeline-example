stages:
  - build
  - test
  - deploy

# This folder is cached between builds and jobs
# http://docs.gitlab.com/ce/ci/yaml/README.html#cache
cache:
  paths:
    - node_modules/

#### BUILD STAGE JOB(S) ####

build:
  stage: build
  image:
    name: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
    entrypoint: [""]
  tags:
    - docker # tells gitlab to use one of the gitlab.com shared docker runners
  script:
    - npm install

#### TEST STAGE JOB(S) ####

unit_tests:
  stage: test
  image:
    name: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
    entrypoint: [""]
  tags:
    - docker
  script:
    - npm test

security_audit:
  stage: test
  image:
    name: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
    entrypoint: [""]
  tags:
    - docker
  script:
    - npm audit

accessibility:
  stage: test
  image: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
  tags:
    - docker
  script:
    # Wait until the website is up before continuing
    - wget --retry-connrefused --tries 30 --waitretry 3 -qO- http://localhost:8080 &> /dev/null
    - npm run a11y
  artifacts:
    when: always
    paths: 
    - ./test/results

behaviour:
  stage: test
  image: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
  tags:
    - docker
  script:
    # Wait until the website is up before continuing
    - wget --retry-connrefused --tries 30 --waitretry 3 -qO- http://localhost:8080 &> /dev/null
    - npm run behaviour
  artifacts:
    when: always
    paths: 
    - ./test/results

#### DEPLOY STAGE JOB(S) ####

deploy:
  stage: deploy
  image:
    name: registry.gitlab.com/patheard/pipeline-example/node-puppeteer:latest
    entrypoint: [""]
  tags:
    - docker
  environment:
    name: production
    url: http://$HEROKU_APP_NAME.herokuapp.com
  script:
    # deploy it using heroku's command line utility
    - dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY
