version: 2
jobs:

  # In stall project dependencies and cache
  build:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}  
      - checkout
      - run: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - node_modules

  # Accessibility tests against locally running service using pa11y
  accessibility_test:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - run: 
        - npm start &        
        - wget --retry-connrefused --tries 30 --waitretry 3 -qO- http://localhost:8080 &> /dev/null # Wait until the website is up before continuing
        - npm run a11y

  # Behaviour tests against locally running service using JEST
  behaviour_test:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - run: 
        - npm start &        
        - wget --retry-connrefused --tries 30 --waitretry 3 -qO- http://localhost:8080 &> /dev/null # Wait until the website is up before continuing
        - npm run behaviour

  # Security audits with npm audit
  security_test:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - run: npm audit  

  # Unit tests using JEST
  unit_test:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - run: npm test

  # Deploy to Heroku environment
  deploy:
    docker:
      - image: patheard/node-puppeteer:latest
    steps:
      - run: dpl --provider=heroku --app=$HEROKU_APP_NAME --api-key=$HEROKU_API_KEY          

# Define job flow, dependencies and filters (when the job should run)
workflows:
  version: 2
  test:
    jobs:
      - build
      - accessibility_test:
          requires:
            - build
      - behaviour_test:
          requires:
            - build
      - unit_test:
          requires:
            - build
      - security_test:
          requires:
            - build
      - deploy:
          requires:
            - accessibility_test
            - behaviour_test
            - security_test
            - unit_test
          filters:
            branches:
              only: master